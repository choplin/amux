name: Build
on:
  push:
    branches: [main]
permissions:
  contents: read
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: macos-latest
            goos: darwin
            goarch: amd64
          - os: windows-latest
            goos: windows
            goarch: amd64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
      - name: Install just
        uses: extractions/setup-just@v3
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-1.24-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-1.24-
            ${{ runner.os }}-go-
      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          just build
      - name: Test binary (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          ./bin/amux version || true
          ./bin/amux --help
      - name: Test binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          .\bin\amux.exe version
          .\bin\amux.exe --help
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: amux-${{ matrix.goos }}-${{ matrix.goarch }}
          path: bin/amux${{ matrix.os == 'windows-latest' && '.exe' || '' }}
