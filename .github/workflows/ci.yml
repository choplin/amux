name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
permissions:
  contents: read
jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - name: Install just
        uses: extractions/setup-just@v3
      - name: Install tmux
        if: runner.os != 'Windows'
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y tmux
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install tmux
          fi
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-1.24-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-1.24-
            ${{ runner.os }}-go-
      - name: Download dependencies
        run: just init
      - name: Run tests
        run: go test -v -race "-coverprofile=coverage.txt" "-covermode=atomic" ./...
      - name: Upload coverage
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.txt
          flags: unittests
          fail_ci_if_error: false
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - name: Install just
        uses: extractions/setup-just@v3
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-1.24-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-1.24-
            ${{ runner.os }}-go-
      - name: Install npm dependencies
        run: npm install
      - name: Run linting
        run: just lint
      - name: Check formatting
        run: |-
          # Run all formatters
          just fmt
          # Verify no changes were made
          if [ -n "$(git diff --name-only)" ]; then
            echo "Formatting changes detected. Please run 'just fmt'"
            git diff
            exit 1
          fi
